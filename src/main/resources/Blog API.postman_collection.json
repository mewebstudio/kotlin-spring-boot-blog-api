{
	"info": {
		"_postman_id": "d97de48a-6767-49f3-a50d-cbf1f7bfdeb8",
		"name": "Blog API",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "2079870",
		"_collection_link": "https://lunar-capsule-667882.postman.co/workspace/Team-Workspace~4a00e7a1-03fc-466b-82c8-45cf6f1cd4c6/collection/2079870-d97de48a-6767-49f3-a50d-cbf1f7bfdeb8?action=share&source=collection_link&creator=2079870"
	},
	"item": [
		{
			"name": "Auth",
			"item": [
				{
					"name": "Register",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"firstname\": \"John\",\n  \"lastname\": \"DOE\",\n  \"gender\": \"male\",\n  \"email\": \"mail@example.com\",\n  \"password\": \"P@sswd123.\",\n  \"passwordConfirm\": \"P@sswd123.\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base}}/auth/register",
							"host": [
								"{{base}}"
							],
							"path": [
								"auth",
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "E-mail verification",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base}}/auth/email-verification/ghlab8ERdwzP3FqEqyuxTBlUNqBxh2pBa7aFnaexlTcuObNRq1TTMtNF7etOkvrL",
							"host": [
								"{{base}}"
							],
							"path": [
								"auth",
								"email-verification",
								"ghlab8ERdwzP3FqEqyuxTBlUNqBxh2pBa7aFnaexlTcuObNRq1TTMtNF7etOkvrL"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200)",
									"",
									"    const response = pm.response.json()",
									"    pm.collectionVariables.set(\"token\", response.token)",
									"    pm.collectionVariables.set(\"refreshToken\", response.refreshToken)",
									"})",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"john@example.com\",\n    \"password\": \"P@sswd123.\",\n    \"rememberMe\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base}}/auth/login",
							"host": [
								"{{base}}"
							],
							"path": [
								"auth",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Password",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"john@example.com\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base}}/auth/password",
							"host": [
								"{{base}}"
							],
							"path": [
								"auth",
								"password"
							]
						}
					},
					"response": []
				},
				{
					"name": "Change password",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"password\": \"P@sswd123.\",\n  \"passwordConfirm\": \"P@sswd123.\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base}}/auth/password/XajBvDnSyfXKjzgrflJA6CQF5IVGxykE2Sp5Y8CIt5QU1hE5dhcWLcCblEyziFUc",
							"host": [
								"{{base}}"
							],
							"path": [
								"auth",
								"password",
								"XajBvDnSyfXKjzgrflJA6CQF5IVGxykE2Sp5Y8CIt5QU1hE5dhcWLcCblEyziFUc"
							]
						}
					},
					"response": []
				},
				{
					"name": "Refresh",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200)",
									"",
									"    const response = pm.response.json()",
									"    pm.collectionVariables.set(\"token\", response.token)",
									"    pm.collectionVariables.set(\"refreshToken\", response.refreshToken)",
									"})",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{refreshToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base}}/auth/refresh",
							"host": [
								"{{base}}"
							],
							"path": [
								"auth",
								"refresh"
							]
						}
					},
					"response": []
				},
				{
					"name": "Logout",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200)",
									"",
									"    pm.collectionVariables.unset(\"token\")",
									"    pm.collectionVariables.unset(\"refreshToken\")",
									"})",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base}}/auth/logout",
							"host": [
								"{{base}}"
							],
							"path": [
								"auth",
								"logout"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Registered",
			"item": [
				{
					"name": "Account",
					"item": [
						{
							"name": "Me",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base}}/account/me",
									"host": [
										"{{base}}"
									],
									"path": [
										"account",
										"me"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update profile",
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"firstname\": \"John\",\n  \"lastname\": \"DOE\",\n  \"gender\": \"male\",\n  \"email\": \"john@example.com\",\n  \"password\": \"P@sswd123.\",\n  \"passwordConfirm\": \"P@sswd123.\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base}}/account/update",
									"host": [
										"{{base}}"
									],
									"path": [
										"account",
										"update"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Users",
					"item": [
						{
							"name": "List",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200)",
											"",
											"    const response = pm.response.json()",
											"    pm.collectionVariables.set(\"userId\", response.items[0].id);",
											"",
											"    if (response.items.length > 1) {",
											"        response.items.forEach((item, index) => {",
											"            if (index !== 0) {",
											"                pm.collectionVariables.set(`userId${index + 1}`, item.id);",
											"            }",
											"        });",
											"    }",
											"})",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base}}/users",
									"host": [
										"{{base}}"
									],
									"path": [
										"users"
									],
									"query": [
										{
											"key": "createdUsers",
											"value": "{{userId}},{{userId2}}",
											"disabled": true
										},
										{
											"key": "updatedUsers",
											"value": "{{userId}},{{userId2}}",
											"disabled": true
										},
										{
											"key": "createdAtStart",
											"value": "2023-11-06T21:28:00.984392",
											"disabled": true
										},
										{
											"key": "createdAtEnd",
											"value": "2025-11-06T21:28:00.984392",
											"disabled": true
										},
										{
											"key": "updatedAtStart",
											"value": "2023-11-06T21:28:00.984392",
											"disabled": true
										},
										{
											"key": "updatedAtEnd",
											"value": "2025-11-06T21:28:00.984392",
											"disabled": true
										},
										{
											"key": "isBlocked",
											"value": "false",
											"disabled": true
										},
										{
											"key": "size",
											"value": "20",
											"disabled": true
										},
										{
											"key": "page",
											"value": "1",
											"disabled": true
										},
										{
											"key": "sort",
											"value": "asc",
											"disabled": true
										},
										{
											"key": "sortBy",
											"value": "createdAt",
											"disabled": true
										},
										{
											"key": "q",
											"value": "xx",
											"disabled": true
										},
										{
											"key": "roles",
											"value": "admin,user",
											"disabled": true
										},
										{
											"key": "genders",
											"value": "male,female,diverse,unknown",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Create",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201)",
											"",
											"    const response = pm.response.json()",
											"    pm.collectionVariables.set(\"userId\", response.id)",
											"})",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"firstname\": \"John\",\n  \"lastname\": \"DOE\",\n  \"gender\": \"male\",\n  \"email\": \"mail@example.com\",\n  \"password\": \"P@sswd123.\",\n  \"passwordConfirm\": \"P@sswd123.\",\n  \"isBlocked\": false,\n  \"roles\": [\n    \"admin\",\n    \"user\"\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base}}/users",
									"host": [
										"{{base}}"
									],
									"path": [
										"users"
									]
								}
							},
							"response": []
						},
						{
							"name": "Show",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base}}/users/{{userId}}",
									"host": [
										"{{base}}"
									],
									"path": [
										"users",
										"{{userId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"firstname\": \"John\",\n  \"lastname\": \"DOE\",\n  \"gender\": \"male\",\n  \"email\": \"mail@example.com\",\n  \"password\": \"P@sswd123.\",\n  \"passwordConfirm\": \"P@sswd123.\",\n  \"isBlocked\": false,\n  \"roles\": [\n    \"admin\",\n    \"user\"\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base}}/users/{{userId}}",
									"host": [
										"{{base}}"
									],
									"path": [
										"users",
										"{{userId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{base}}/users/{{userId}}",
									"host": [
										"{{base}}"
									],
									"path": [
										"users",
										"{{userId}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Categories",
					"item": [
						{
							"name": "List",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200)",
											"",
											"    const response = pm.response.json()",
											"    pm.collectionVariables.set(\"categoryId\", response.items[0].id);",
											"    pm.collectionVariables.set(\"categorySlug\", response.items[0].id);",
											"",
											"    if (response.items.length > 1) {",
											"        response.items.forEach((item, index) => {",
											"            if (index !== 0) {",
											"                pm.collectionVariables.set(`categoryId${index + 1}`, item.id);",
											"                pm.collectionVariables.set(`categorySlug${index + 1}`, item.id);",
											"            }",
											"        });",
											"    }",
											"})",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base}}/categories",
									"host": [
										"{{base}}"
									],
									"path": [
										"categories"
									],
									"query": [
										{
											"key": "createdUsers",
											"value": "{{userId}},{{userId2}}",
											"disabled": true
										},
										{
											"key": "updatedUsers",
											"value": "{{userId}},{{userId2}}",
											"disabled": true
										},
										{
											"key": "createdAtStart",
											"value": "2023-11-06T21:28:00.984392",
											"disabled": true
										},
										{
											"key": "createdAtEnd",
											"value": "2025-11-06T21:28:00.984392",
											"disabled": true
										},
										{
											"key": "updatedAtStart",
											"value": "2023-11-06T21:28:00.984392",
											"disabled": true
										},
										{
											"key": "updatedAtEnd",
											"value": "2025-11-06T21:28:00.984392",
											"disabled": true
										},
										{
											"key": "size",
											"value": "20",
											"disabled": true
										},
										{
											"key": "page",
											"value": "1",
											"disabled": true
										},
										{
											"key": "sort",
											"value": "asc",
											"disabled": true
										},
										{
											"key": "sortBy",
											"value": "createdAt",
											"disabled": true
										},
										{
											"key": "q",
											"value": "lorem",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Create",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201)",
											"",
											"    const response = pm.response.json()",
											"    pm.collectionVariables.set(\"categoryId\", response.id)",
											"    pm.collectionVariables.set(\"categorySlug\", response.slug)",
											"})",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"title\": \"Lorem ipsum\",\n    \"description\": \"Lorem ipsum dolor sit amet, consectetur adipiscing elit.\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base}}/categories",
									"host": [
										"{{base}}"
									],
									"path": [
										"categories"
									]
								}
							},
							"response": []
						},
						{
							"name": "Show",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base}}/categories/{{categorySlug}}",
									"host": [
										"{{base}}"
									],
									"path": [
										"categories",
										"{{categorySlug}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"title\": \"Lorem ipsum\",\n    \"description\": \"Lorem ipsum dolor sit amet, consectetur adipiscing elit.\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base}}/categories/{{categoryId}}",
									"host": [
										"{{base}}"
									],
									"path": [
										"categories",
										"{{categoryId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{base}}/categories/{{categoryId}}",
									"host": [
										"{{base}}"
									],
									"path": [
										"categories",
										"{{categoryId}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Tags",
					"item": [
						{
							"name": "List",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200)",
											"",
											"    const response = pm.response.json()",
											"    pm.collectionVariables.set(\"tagId\", response.items[0].id);",
											"    pm.collectionVariables.set(\"tagSlug\", response.items[0].islug);",
											"",
											"    if (response.items.length > 1) {",
											"        response.items.forEach((item, index) => {",
											"            if (index !== 0) {",
											"                pm.collectionVariables.set(`tagId${index + 1}`, item.id);",
											"                pm.collectionVariables.set(`tagSlug${index + 1}`, item.id);",
											"            }",
											"        });",
											"    }",
											"})",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base}}/tags",
									"host": [
										"{{base}}"
									],
									"path": [
										"tags"
									],
									"query": [
										{
											"key": "createdUsers",
											"value": "{{userId}},{{userId2}}",
											"disabled": true
										},
										{
											"key": "updatedUsers",
											"value": "{{userId}},{{userId2}}",
											"disabled": true
										},
										{
											"key": "createdAtStart",
											"value": "2023-11-06T21:28:00.984392",
											"disabled": true
										},
										{
											"key": "createdAtEnd",
											"value": "2025-11-06T21:28:00.984392",
											"disabled": true
										},
										{
											"key": "updatedAtStart",
											"value": "2023-11-06T21:28:00.984392",
											"disabled": true
										},
										{
											"key": "updatedAtEnd",
											"value": "2025-11-06T21:28:00.984392",
											"disabled": true
										},
										{
											"key": "size",
											"value": "20",
											"disabled": true
										},
										{
											"key": "page",
											"value": "1",
											"disabled": true
										},
										{
											"key": "sort",
											"value": "asc",
											"disabled": true
										},
										{
											"key": "sortBy",
											"value": "createdAt",
											"disabled": true
										},
										{
											"key": "q",
											"value": "lorem",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Create",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201)",
											"",
											"    const response = pm.response.json()",
											"    pm.collectionVariables.set(\"tagId\", response.id)",
											"    pm.collectionVariables.set(\"tagSlug\", response.slug)",
											"})",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"title\": \"Lorem ipsum\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base}}/tags",
									"host": [
										"{{base}}"
									],
									"path": [
										"tags"
									]
								}
							},
							"response": []
						},
						{
							"name": "Show",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base}}/tags/{{tagSlug}}",
									"host": [
										"{{base}}"
									],
									"path": [
										"tags",
										"{{tagSlug}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"title\": \"Lorem ipsum\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base}}/tags/{{tagId}}",
									"host": [
										"{{base}}"
									],
									"path": [
										"tags",
										"{{tagId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{base}}/tags/{{tagId}}",
									"host": [
										"{{base}}"
									],
									"path": [
										"tags",
										"{{tagId}}"
									]
								}
							},
							"response": []
						}
					]
				}
			],
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "{{token}}",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"packages": {},
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"packages": {},
						"exec": [
							""
						]
					}
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "base",
			"value": "http://0.0.0.0:8080",
			"type": "string"
		},
		{
			"key": "token",
			"value": ""
		},
		{
			"key": "refreshToken",
			"value": ""
		},
		{
			"key": "categoryId",
			"value": ""
		},
		{
			"key": "categorySlug",
			"value": ""
		},
		{
			"key": "userId",
			"value": ""
		},
		{
			"key": "userId2",
			"value": ""
		},
		{
			"key": "categoryId2",
			"value": ""
		},
		{
			"key": "categoryId3",
			"value": ""
		},
		{
			"key": "categoryId4",
			"value": ""
		},
		{
			"key": "categoryId5",
			"value": ""
		},
		{
			"key": "categoryId6",
			"value": ""
		},
		{
			"key": "categoryId7",
			"value": ""
		},
		{
			"key": "categoryId8",
			"value": ""
		},
		{
			"key": "categoryId9",
			"value": ""
		},
		{
			"key": "categoryId10",
			"value": ""
		},
		{
			"key": "categoryId11",
			"value": ""
		},
		{
			"key": "categoryId12",
			"value": ""
		},
		{
			"key": "tagId",
			"value": ""
		},
		{
			"key": "tagSlug",
			"value": ""
		},
		{
			"key": "userId3",
			"value": ""
		},
		{
			"key": "categorySlug2",
			"value": ""
		},
		{
			"key": "categorySlug3",
			"value": ""
		},
		{
			"key": "categorySlug4",
			"value": ""
		},
		{
			"key": "categorySlug5",
			"value": ""
		},
		{
			"key": "categorySlug6",
			"value": ""
		},
		{
			"key": "categorySlug7",
			"value": ""
		},
		{
			"key": "categorySlug8",
			"value": ""
		},
		{
			"key": "categorySlug9",
			"value": ""
		},
		{
			"key": "categorySlug10",
			"value": ""
		},
		{
			"key": "categorySlug11",
			"value": ""
		},
		{
			"key": "categorySlug12",
			"value": ""
		}
	]
}